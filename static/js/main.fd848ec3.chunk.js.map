{"version":3,"sources":["data/BubbleGraph/land-area-by-country.csv","data/BubbleGraph/population-by-country-2000-2014.csv","data/BubbleGraph/co2-by-country-2000-2014.csv","data/BubbleGraph/country-flags.csv","data/Choropleth/county-temp-1979-2011.csv","data/LineGraph/co2-ppm-0-2014.csv","components/BubbleGraph/SliderHandle/SliderHandle.js","components/BubbleGraph/HorizontalSlider/HorizontalSlider.js","components/BubbleGraph/BubbleGraph.js","components/Choropleth/ControlButtons/ControlButtons.js","components/Choropleth/Choropleth.js","components/LineGraph/LineGraph.js","components/StoryboardContainer/StoryboardContainer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Handle","Slider","SliderHandle","props","value","dragging","index","restProps","Object","objectWithoutProperties","react_default","a","createElement","rc_tooltip_es","prefixCls","overlay","visible","placement","key","assign","HorizontalSlider","_this","this","className","rc_slider_es","min","max","defaultValue","handle","onChange","v","updateBubbleGraph","Component","BubbleGraph","state","countryFlags","data","totalPopData","totalCo2Data","totalLandData","setData","year","_this$state","Array","fill","map","row","i","Country","x","parseInt","y","Area","size","setState","_this2","Promise","all","d3","landData","populationData","co2Data","then","files","_this3","diameter","each","el","push","Math","ceil","attr","parentNode","insert","append","d","concat","_this4","_this$state2","markSeriesProps","colorType","animation","sizeRange","seriesId","opacityType","onValueMouseOver","es","margin","top","bottom","left","onMouseLeave","width","height","yType","xType","xDomain","yDomain","noHorizontalGridLines","noVerticalGridLines","position","title","tickLabelAngle","tickSize","tickFormat","scale","tickTotal","align","horizontal","vertical","BubbleGraph_HorizontalSlider_HorizontalSlider","ControlButtons","isOn","showButtons","pauseMap","startMap","resetMap","onClick","fa","Choropleth","color","counties","format","totalTempData","us","yearTempData","years","yearData","clearInterval","timer","endMap","setInterval","isLastYear","Map","get","id","select","text","county","countyTemp","isNaN","renderMap","path","domain","rangeRound","svg","refs","anchor","g","selectAll","range","invertExtent","enter","call","tickValues","slice","remove","topojson","objects","features","datum","states","b","tempData","_this$state3","ref","Choropleth_ControlButtons_ControlButtons","LineGraph","Year","console","log","curve","onNearestX","StoryboardContainer","components_LineGraph_LineGraph","components_BubbleGraph_BubbleGraph","components_Choropleth_Choropleth","App","components_StoryboardContainer_StoryboardContainer","ReactDOM","render","src_App","document","getElementById"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iFCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gRCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oXCIlCC,EAASC,IAAOD,OAkBPE,EAhBM,SAACC,GAAU,IACtBC,EAAyCD,EAAzCC,MAAOC,EAAkCF,EAAlCE,SAAUC,EAAwBH,EAAxBG,MAAUC,EADLC,OAAAC,EAAA,EAAAD,CACmBL,EADnB,8BAG9B,OACEO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,UAAU,oBACVC,QAASX,EACTY,QAASX,EACTY,UAAU,MACVC,IAAKZ,GAELI,EAAAC,EAAAC,cAACZ,EAADQ,OAAAW,OAAA,CAAQf,MAAOA,GAAWG,MCOjBa,2LAfJ,IAAAC,EAAAC,KACP,OACEZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,oBACbb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,IAAK,IACLC,IAAK,KACLC,aAAc,IACdC,OAAQ1B,EACR2B,SAAU,SAACC,GAAD,OAAOT,EAAKlB,MAAM4B,kBAAkBD,cAVzBE,sFC8IhBC,qNAtIbC,MAAQ,CACNC,aAAc,KACdC,KAAM,KACNC,aAAc,KACdC,aAAc,KACdC,cAAe,KACfnC,OAAO,KAkDToC,QAAU,SAAAC,GAAQ,IAAAC,EACsCrB,EAAKa,MAAnDI,EADQI,EACRJ,aAAcC,EADNG,EACMH,cAAeF,EADrBK,EACqBL,aACrC,OAAO,IAAIM,MAAM,IAAIC,KAAK,GAAGC,IAAI,SAACC,EAAKC,GAAN,MAAa,CAC5CC,QAASX,EAAaU,GAAb,QACTE,EAAGC,SAASZ,EAAaS,GAAGN,IAC5BU,EAAGD,SAASX,EAAcQ,GAAGK,MAC7BC,KAAMH,SAASb,EAAaU,GAAGN,UAInCV,kBAAoB,SAAAU,GAClBpB,EAAKiC,SAAS,CACZlB,KAAMf,EAAKmB,QAAQC,yFA3DH,IAAAc,EAAAjC,KAClBkC,QAAQC,IAAI,CACVC,IAAOC,KACPD,IAAOE,KACPF,IAAOG,KACPH,IAAOvB,OAER2B,KAAK,SAACC,GACLR,EAAKD,SAAS,CACZf,cAAewB,EAAM,GACrB1B,aAAc0B,EAAM,GACpBzB,aAAcyB,EAAM,GACpB5B,aAAc4B,EAAM,IACnB,WACDR,EAAKD,SAAS,CACZlB,KAAMmB,EAAKf,QAAQ,wDAMN,IAAAwB,EAAA1C,KACf2C,EAAW,GAEfP,IAAa,UAAUQ,KAAK,WACxB,IAAMC,EAAK7C,KACX2C,EAASG,KAAKC,KAAKC,KAAiC,EAA5BZ,IAAUpC,MAAMiD,KAAK,OAC7Cb,IAAUS,EAAGK,YACVC,OAAO,OACPF,KAAK,QAAS,WACdG,OAAO,WAAa,OAAOP,MAE7BI,KAAK,QAAS,SAACI,EAAG5B,GAAJ,4BAAA6B,OAAgC7B,EAAhC,kBAEnBW,IAAa,YACVgB,OAAO,QACPA,OAAO,WACLH,KAAK,KAAM,SAACI,EAAG5B,GAAJ,iBAAA6B,OAAqB7B,KAChCwB,KAAK,QAAS,QACdA,KAAK,SAAU,QACjBG,OAAO,SACLH,KAAK,aAAc,SAACI,EAAG5B,GAAJ,OAAUiB,EAAK9B,MAAMC,aAAaY,GAAxB,MAC7BwB,KAAK,QAAS,SAACI,EAAG5B,GAAJ,OAAUkB,EAASlB,KACjCwB,KAAK,SAAU,SAACI,EAAG5B,GAAJ,OAAUkB,EAASlB,sCAoBhC,IAAA8B,EAAAvD,KAAAwD,EACqBxD,KAAKY,MAAzBE,EADD0C,EACC1C,KAEF2C,GAHCD,EACOE,UAEU,CACtBC,WAAW,EACXC,UAAW,CAAC,GAAI,IAChBC,SAAU,cACVC,YAAa,UACbhD,OACAiD,iBAAkB,SAAAjF,GAAK,OAAIyE,EAAKvB,SAAS,CAAClD,aAG5C,OACEM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gBACbb,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CACEC,OAAQ,CAAEC,IAAI,GAAIC,OAAO,IAAKC,KAAK,IACnCC,aAAc,kBAAMd,EAAKvB,SAAS,CAAClD,OAAO,KAC1CwF,MAAO,IACPC,OAAQ,IACRC,MAAM,MACNC,MAAM,MACNC,QAAS,CAAC,KAAO,KACjBC,QAAS,CAAC,KAAO,KACjBC,uBAAqB,EACrBC,qBAAmB,GAEnBzF,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CACEc,SAAS,MACTC,MAAM,2CACNC,gBAAiB,GACjBC,SAAU,EACVC,WAAa,SAACpG,EAAO2C,EAAG0D,EAAOC,GAC7B,SAAA9B,OAAU6B,EAAMD,WAAW,GAAI,MAArBC,CAA4BrG,OAG1CM,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CACEc,SAAS,MACTC,MAAM,qBACNE,SAAU,EACVC,WAAa,SAACpG,EAAO2C,EAAG0D,EAAOC,GAC7B,SAAA9B,OAAU6B,EAAMD,WAAW,GAAI,MAArBC,CAA4BrG,OAG1CM,EAAAC,EAAAC,cAAC0E,EAAA,EAAeP,GACfzD,KAAKY,MAAM9B,MACRM,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CACAqB,MAAO,CAACC,WAAY,QAASC,SAAU,OACvCzG,MAAOkB,KAAKY,MAAM9B,QAElB,OAIRM,EAAAC,EAAAC,cAACkG,EAAD,CACE/E,kBAAmBT,KAAKS,4BAhIRC,8BCuBX+E,UA9BQ,SAAC5G,GAAU,IACxB6G,EAAoD7G,EAApD6G,KAAMC,EAA8C9G,EAA9C8G,YAAaC,EAAiC/G,EAAjC+G,SAAUC,EAAuBhH,EAAvBgH,SAAUC,EAAajH,EAAbiH,SAE/C,OACE1G,EAAAC,EAAAC,cAAA,WACGqG,GAAeD,GACdtG,EAAAC,EAAAC,cAAA,OACEyG,QAAS,kBAAMH,MAEfxG,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAS/F,UAAW,iBAGvB0F,IAAgBD,GACftG,EAAAC,EAAAC,cAAA,OACEyG,QAAS,kBAAMF,MAEfzG,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAQ/F,UAAW,kBAGrB0F,GACAvG,EAAAC,EAAAC,cAAA,OACEyG,QAAS,kBAAMD,MAEf1G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAQ/F,UAAW,+CCgKdgG,qNAjLbrF,MAAQ,CACNsF,MAAO,KACPC,SAAU,KACVC,OAAQhE,IAAU,IAClBpD,MAAO,EACP0G,MAAM,EACNC,aAAa,EACbU,cAAe,KACfC,GAAI,KACJC,aAAc,KACdC,MAAOC,EAASD,SA6BlBV,SAAW,WACT/F,EAAKiC,SAAS,CACZhD,MAAO,EACP0G,MAAM,EACNC,aAAa,GACZ,WACDe,cAAc3G,EAAK4G,OACnB5G,EAAK8F,gBAITD,SAAW,WACT7F,EAAKiC,SAAS,CACZ0D,MAAM,GACL,WACDgB,cAAc3G,EAAK4G,YAIvBC,OAAS,WACPF,cAAc3G,EAAK4G,OACnB5G,EAAKiC,SAAS,CACZ0D,MAAM,EACNC,aAAa,EACb3G,MAAO,QAIX6G,SAAW,WACT9F,EAAKiC,SAAS,CAAC0D,KAA6C,OAAvC3F,EAAKa,MAAM4F,MAAMzG,EAAKa,MAAM5B,SAEjDe,EAAK4G,MAAQE,YAAY,WAAM,IAAAzF,EAC4BrB,EAAKa,MAAtDsF,EADqB9E,EACrB8E,MAAOC,EADc/E,EACd+E,SAAUK,EADIpF,EACJoF,MAAOxH,EADHoC,EACGpC,MAAOqH,EADVjF,EACUiF,cACjCS,EAA8B,OAAjBN,EAAMxH,GACrB8H,GAAY/G,EAAK6G,SACrB,IAAML,EAAe,IAAIQ,IAAIV,EAAc9E,IAAI,SAAA8B,GAAC,MAAI,CAACA,EAAE,eAAgBA,EAAEmD,EAAMxH,QAC/Ee,EAAKiC,SAAS,CACZuE,eACAvH,MAAO8H,EAAa,GAAK9H,EAAQ,GAEjC,WACEoD,IAAa,eACVa,KAAK,OAAQ,SAAAI,GAAC,OAAI6C,EAAMK,EAAaS,IAAI3D,EAAE4D,OAC3CC,OAAO,SACLC,KAAK,SAAA9D,GACJ,IAAM+D,EAASjB,EAASa,IAAI3D,EAAE4D,IACxBI,EAAad,EAAaS,IAAI3D,EAAE4D,IACtC,OAAOK,MAAMD,GAAc,gBAApB,GAAA/D,OAAyC8D,EAAzC,OAAA9D,OAAqD+D,EAArD,UAIhB,QAGLE,UAAY,WAAM,IAAA/D,EACsCzD,EAAKa,MAAnDsF,EADQ1C,EACR0C,MAAOC,EADC3C,EACD2C,SAAUC,EADT5C,EACS4C,OAAQG,EADjB/C,EACiB+C,aAAcD,EAD/B9C,EAC+B8C,GAEzCkB,EAAOpF,MAEPT,EAAIS,MACPqF,OAAOrF,IAAU8D,EAAMuB,WACvBC,WAAW,CAAC,IAAK,MAEdC,EAAMvF,IAAUrC,EAAK6H,KAAKC,QAE1BC,EAAIH,EAAIvE,OAAO,KAClBH,KAAK,YAAa,mBAErB6E,EAAEC,UAAU,QACTjH,KAAKoF,EAAM8B,QAAQzG,IAAI,SAAA8B,GAAC,OAAI6C,EAAM+B,aAAa5E,MAC/C6E,QAAQ9E,OAAO,QACbH,KAAK,SAAU,GACfA,KAAK,IAAK,SAAAI,GAAC,OAAI1B,EAAE0B,EAAE,MACnBJ,KAAK,QAAS,SAAAI,GAAC,OAAI1B,EAAE0B,EAAE,IAAM1B,EAAE0B,EAAE,MACjCJ,KAAK,OAAQ,SAAAI,GAAC,OAAI6C,EAAM7C,EAAE,MAE/ByE,EAAE1E,OAAO,QACNH,KAAK,QAAS,WACdA,KAAK,IAAKtB,EAAEqG,QAAQ,IACpB/E,KAAK,KAAM,GACXA,KAAK,OAAQ,QACbA,KAAK,cAAe,SACpBA,KAAK,cAAe,QACpBkE,KAAKZ,EAAaxB,OAErB+C,EAAEK,KAAK/F,IAAcT,GAChBsD,SAAS,IACTC,WAAWkB,GACXgC,WAAWlC,EAAM8B,QAAQK,MAAM,GAAG9G,IAAI,SAAA8B,GAAC,OAAI6C,EAAM+B,aAAa5E,GAAG,OAEnE6D,OAAO,WACLoB,SAELX,EAAIvE,OAAO,KACRH,KAAK,QAAS,aACd8E,UAAU,QACVjH,KAAKyH,IAAiBjC,EAAIA,EAAGkC,QAAQrC,UAAUsC,UAC/CP,QAAQ9E,OAAO,QACbH,KAAK,QAAS,UACdA,KAAK,OAAQ,SAAAI,GAAC,OAAI6C,EAAMK,EAAaS,IAAI3D,EAAE4D,OAC3ChE,KAAK,IAAKuE,GACZpE,OAAO,SACL+D,KAAK,SAAA9D,GACJ,IAAM+D,EAASjB,EAASa,IAAI3D,EAAE4D,IACxBI,EAAad,EAAaS,IAAI3D,EAAE4D,IACtC,OAAOK,MAAMD,GAAc,gBAApB,GAAA/D,OAAyC8D,EAAzC,OAAA9D,OAAqD+D,EAArD,OAIbM,EAAIvE,OAAO,QACRsF,MAAMH,IAAcjC,EAAIA,EAAGkC,QAAQG,OAAQ,SAACtJ,EAAGuJ,GAAJ,OAAUvJ,IAAMuJ,KAC3D3F,KAAK,OAAQ,QACbA,KAAK,SAAU,SACfA,KAAK,kBAAmB,SACxBA,KAAK,IAAKuE,uFA5IK,IAAAvF,EAAAjC,KAClBkC,QAAQC,IAAI,CACVC,IAAQ,4CACRA,IAAOyG,OAERrG,KAAK,SAACC,GACL,IAAM4D,EAAgB5D,EAAM,GACtB8D,EAAe,IAAIQ,IAAItE,EAAM,GAAGlB,IAAI,SAAA8B,GAAC,MAAI,CAACA,EAAE,eAAgBA,EAAE,UAC9D8C,EAAW,IAAIY,IAAItE,EAAM,GAAGlB,IAAI,SAAA8B,GAAC,MAAI,CAACA,EAAE,eAAgBA,EAAC,WACzD6C,EAAQ9D,MAAmBqF,OAAO,CAAC,GAAI,KAAKO,MAAM5F,IAAc,IAEtEH,EAAKD,SAAS,CACZmE,WACAI,eACAF,gBACAH,QACAI,GAAI7D,EAAM,IAEV,WACER,EAAKsF,YACLtF,EAAK4D,gDA2HJ,IAAAiD,EACqC9I,KAAKY,MAAzC8E,EADDoD,EACCpD,KAAMC,EADPmD,EACOnD,YAAaa,EADpBsC,EACoBtC,MAAOxH,EAD3B8J,EAC2B9J,MAElC,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACGkH,EAAMxH,IAETI,EAAAC,EAAAC,cAAA,OAAKyJ,IAAI,SAASzE,MAAO,IAAKC,OAAQ,MACtCnF,EAAAC,EAAAC,cAAC0J,EAAD,CACEtD,KAAMA,EACNC,YAAaA,EACbC,SAAU5F,KAAK4F,SACfC,SAAU7F,KAAK6F,SACfC,SAAU9F,KAAK8F,mBA3KApF,gCC+CVuI,qNAhDZrI,MAAQ,CACP2B,QAAS,GACTzD,OAAO,sFAGW,IAAAmD,EAAAjC,KAClBkC,QAAQC,IAAI,CACVC,IAAOG,OAERC,KAAK,SAACC,GACL,IAAM3B,EAAO2B,EAAM,GAAGlB,IAAI,SAAA8B,GACxB,MAAO,CACH1B,EAAGC,SAASyB,EAAE6F,MACdrH,EAAGD,SAASyB,EAAE,mBAGpBpB,EAAKD,SAAS,CACXO,QAASzB,uCAKP,IAAA4B,EAAA1C,KAEP,OADAmJ,QAAQC,IAAIpJ,KAAKY,MAAM2B,SAErBnD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CACEK,aAAc,kBAAM3B,EAAKV,SAAS,CAAClD,OAAO,KAC1CwF,MAAO,IACPC,OAAQ,KAERnF,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,MACA5E,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,MACA5E,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,MACA5E,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,MACA5E,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CACE/D,UAAU,eACVoJ,MAAO,iBACPvI,KAAMd,KAAKY,MAAM2B,QACjB+G,WAAY,SAAAjG,GAAC,OAAIX,EAAKV,SAAS,CAAClD,MAAOuE,OAExCrD,KAAKY,MAAM9B,OAASM,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAMlF,MAAOkB,KAAKY,MAAM9B,iBA1C/B4B,cCcT6I,2LAVX,OACEnK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkK,EAAD,MACApK,EAAAC,EAAAC,cAACmK,EAAD,MACArK,EAAAC,EAAAC,cAACoK,EAAD,cAR0BhJ,cCLnBiJ,EAFH,kBAAMvK,EAAAC,EAAAC,cAACsK,EAAD,OCClBC,IAASC,OAAO1K,EAAAC,EAAAC,cAACyK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.fd848ec3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/land-area-by-country.3064315f.csv\";","module.exports = __webpack_public_path__ + \"static/media/population-by-country-2000-2014.88f1cef7.csv\";","module.exports = __webpack_public_path__ + \"static/media/co2-by-country-2000-2014.5cb5bbd6.csv\";","module.exports = __webpack_public_path__ + \"static/media/country-flags.a1597ea9.csv\";","module.exports = __webpack_public_path__ + \"static/media/county-temp-1979-2011.72529182.csv\";","module.exports = __webpack_public_path__ + \"static/media/co2-ppm-0-2014.13a1838a.csv\";","import React from 'react';\nimport Tooltip from 'rc-tooltip';\nimport Slider from 'rc-slider';\n\nconst Handle = Slider.Handle;\n\nconst SliderHandle = (props) => {\n  const { value, dragging, index, ...restProps } = props;\n  \n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nexport default SliderHandle;\n","import React, { Component } from 'react';\nimport Slider from 'rc-slider';\n\nimport SliderHandle from '../SliderHandle';\n\nimport './HorizontalSlider.css';\n\nclass HorizontalSlider extends Component {\n  \n  render() {\n    return (\n      <div className='slider-container'>\n        <Slider \n          min={2000} \n          max={2014} \n          defaultValue={2000} \n          handle={SliderHandle} \n          onChange={(v) => this.props.updateBubbleGraph(v)}\n        />\n      </div>\n    )\n  }\n}\n\nexport default HorizontalSlider;\n","// External imports\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { XYPlot, XAxis, YAxis, MarkSeries, Hint } from 'react-vis';\n\n// Internal imports\nimport HorizontalSlider from './HorizontalSlider';\nimport landData from '../../data/BubbleGraph/land-area-by-country.csv';\nimport populationData from '../../data/BubbleGraph/population-by-country-2000-2014.csv';\nimport co2Data from '../../data/BubbleGraph/co2-by-country-2000-2014.csv';\nimport countryFlags from '../../data/BubbleGraph/country-flags.csv'\n\nimport './BubbleGraph.css';\n\nclass BubbleGraph extends Component {\n  state = {\n    countryFlags: null,\n    data: null,\n    totalPopData: null,\n    totalCo2Data: null,\n    totalLandData: null,\n    value: false\n  };\n\n  componentDidMount() {\n    Promise.all([\n      d3.csv(landData),\n      d3.csv(populationData),\n      d3.csv(co2Data),\n      d3.csv(countryFlags),\n    ])\n    .then((files) => {\n      this.setState({\n        totalLandData: files[0],\n        totalPopData: files[1],\n        totalCo2Data: files[2],\n        countryFlags: files[3],\n      }, () => {\n        this.setState({\n          data: this.setData(2000),\n        })\n      })\n    })\n  }\n\n  componentDidUpdate() {\n    let diameter = [];\n\n    d3.selectAll('circle').each(function() {\n        const el = this;\n        diameter.push(Math.ceil(d3.select(this).attr('r') * 2 ));\n        d3.select(el.parentNode)\n          .insert(\"svg\")\n          .attr(\"class\", \"wrapped\")\n          .append(function() { return el; });\n    })\n        .attr('style', (d, i) => `fill: url(#country-${i}) !important` )\n\n    d3.selectAll('.wrapped')\n      .append(\"defs\")\n      .append('pattern')\n        .attr('id', (d, i) => `country-${i}`)\n        .attr('width', '100%')\n        .attr('height', '100%')\n      .append(\"image\")\n        .attr(\"xlink:href\", (d, i) => this.state.countryFlags[i]['URL'])\n        .attr('width', (d, i) => diameter[i])\n        .attr('height', (d, i) => diameter[i])\n\n  }\n\n  setData = year => {\n    const { totalCo2Data, totalLandData, totalPopData } = this.state;\n    return new Array(36).fill(0).map((row, i) => ({\n      Country: totalPopData[i]['Country'],\n      x: parseInt(totalCo2Data[i][year]),\n      y: parseInt(totalLandData[i].Area),  \n      size: parseInt(totalPopData[i][year]), \n    }));\n  }\n\n  updateBubbleGraph = year => {\n    this.setState({\n      data: this.setData(year),\n    });\n  }\n\n  render() {\n    const { data, colorType } = this.state;\n\n    const markSeriesProps = {\n      animation: true,\n      sizeRange: [10, 50],\n      seriesId: 'BubbleGraph',\n      opacityType: 'literal',\n      data,\n      onValueMouseOver: value => this.setState({value}),\n    };\n\n    return (\n      <div>\n        <div className=\"plot-wrapper\">\n          <XYPlot\n            margin={{ top:75, bottom:100, left:75}}\n            onMouseLeave={() => this.setState({value: false})}\n            width={960}\n            height={600}\n            yType='log'\n            xType='log'\n            xDomain={[15000, 10000000]}\n            yDomain={[15000, 30000000]}\n            noHorizontalGridLines\n            noVerticalGridLines\n          >\n            <XAxis \n              position=\"end\"\n              title=\"Greenhouse gas emissions (metric tonnes)\"\n              tickLabelAngle={-45}\n              tickSize={4}\n              tickFormat={ (value, i, scale, tickTotal) => {\n                return `${scale.tickFormat(10, '.0s')(value)}`\n              }}\n            />\n            <YAxis \n              position=\"end\"\n              title=\"Land area (sq. km)\"\n              tickSize={4}\n              tickFormat={ (value, i, scale, tickTotal ) => {\n                return `${scale.tickFormat(10, '.0s')(value)}`\n              }}\n            />\n            <MarkSeries {...markSeriesProps} />\n            {this.state.value \n              ? <Hint \n                align={{horizontal: 'right', vertical: 'top'}}\n                value={this.state.value} \n              /> \n              : null\n            }\n          </XYPlot>\n        </div>\n        <HorizontalSlider \n          updateBubbleGraph={this.updateBubbleGraph}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BubbleGraph;\n","// External imports\nimport React from 'react';\nimport { FaPause, FaPlay, FaRedo } from 'react-icons/fa';\n\n// Internal imports\nimport './ControlButtons.css';\n\nconst ControlButtons = (props) => {\n  const { isOn, showButtons, pauseMap, startMap, resetMap } = props;\n  \n  return (\n    <div>\n      {showButtons && isOn && \n        <div \n          onClick={() => pauseMap()}\n        >\n          <FaPause className={'btn-control'}/>\n        </div>\n      }\n      {showButtons && !isOn && \n        <div \n          onClick={() => startMap()}\n        >\n          <FaPlay className={'btn-control'}/>\n        </div>\n      }\n      {!showButtons &&\n        <div \n          onClick={() => resetMap()}\n        >\n          <FaRedo className={'btn-control'}/>\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default ControlButtons;","// External imports\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\n\n// Internal imports\nimport ControlButtons from './ControlButtons';\nimport tempData from '../../data/Choropleth/county-temp-1979-2011.csv';\nimport yearData from '../../data/Choropleth/county-temp-years-1979-2011.json';\n\nimport './Choropleth.css';\n\nclass Choropleth extends Component {\n  state = {\n    color: null,\n    counties: null,\n    format: d3.format(''),\n    index: 0,\n    isOn: true,\n    showButtons: true,\n    totalTempData: null,\n    us: null,\n    yearTempData: null,\n    years: yearData.years,\n  }\n\n  componentDidMount() {\n    Promise.all([\n      d3.json(\"https://unpkg.com/us-atlas@1/us/10m.json\"),\n      d3.csv(tempData),\n    ])\n    .then((files) => {\n      const totalTempData = files[1];\n      const yearTempData = new Map(files[1].map(d => [d['County Code'], d[1979]]));\n      const counties = new Map(files[1].map(d => [d['County Code'], d['County']]));\n      const color = d3.scaleQuantize().domain([36, 90]).range(d3.schemeReds[9]);\n\n      this.setState({\n        counties,\n        yearTempData,\n        totalTempData,\n        color,\n        us: files[0],\n      }, \n        () => {\n          this.renderMap();\n          this.startMap();\n        }\n      );\n    })\n  }\n\n  resetMap = () => {\n    this.setState({ \n      index: 0, \n      isOn: true,\n      showButtons: true,\n    }, () => {\n      clearInterval(this.timer);\n      this.startMap();\n    });\n  }\n\n  pauseMap = () => {\n    this.setState({ \n      isOn: false \n    }, () => {\n      clearInterval(this.timer);\n    });\n  }\n\n  endMap = () => {\n    clearInterval(this.timer);\n    this.setState({ \n      isOn: false,\n      showButtons: false,\n      index: 32,\n    });\n  }\n\n  startMap = () => {\n    this.setState({isOn: this.state.years[this.state.index] !== 2011});\n\n    this.timer = setInterval(() => {\n      const { color, counties, years, index, totalTempData } = this.state;\n      const isLastYear = years[index] === 2011;\n      if (isLastYear) this.endMap()\n      const yearTempData = new Map(totalTempData.map(d => [d['County Code'], d[years[index]]]));\n      this.setState({\n        yearTempData,\n        index: isLastYear ? 32 : index + 1,\n      }, \n        () => {\n          d3.selectAll('path.county')\n            .attr(\"fill\", d => color(yearTempData.get(d.id)))\n            .select(\"title\")\n              .text(d =>  {\n                const county = counties.get(d.id);\n                const countyTemp = yearTempData.get(d.id);\n                return isNaN(countyTemp) ? \"Missing value\" : `${county} - ${countyTemp}F`; \n              });\n        }  \n      );\n    }, 1000);\n  }\n\n  renderMap = () => {\n    const { color, counties, format, yearTempData, us } = this.state;\n\n    const path = d3.geoPath();\n\n    const x = d3.scaleLinear()\n      .domain(d3.extent(color.domain()))\n      .rangeRound([600, 860]);\n\n    const svg = d3.select(this.refs.anchor);\n\n    const g = svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,40)\");\n\n    g.selectAll(\"rect\")\n      .data(color.range().map(d => color.invertExtent(d)))\n      .enter().append(\"rect\")\n        .attr(\"height\", 8)\n        .attr(\"x\", d => x(d[0]))\n        .attr(\"width\", d => x(d[1]) - x(d[0]))\n        .attr(\"fill\", d => color(d[0]));\n\n    g.append(\"text\")\n      .attr(\"class\", \"caption\")\n      .attr(\"x\", x.range()[0])\n      .attr(\"y\", -6)\n      .attr(\"fill\", \"#000\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"font-weight\", \"bold\")\n      .text(yearTempData.title);\n\n    g.call(d3.axisBottom(x)\n        .tickSize(13)\n        .tickFormat(format)\n        .tickValues(color.range().slice(1).map(d => color.invertExtent(d)[0]))\n      )\n      .select(\".domain\")\n        .remove();\n\n    svg.append(\"g\")\n      .attr(\"class\", \"districts\")\n      .selectAll(\"path\")\n      .data(topojson.feature(us, us.objects.counties).features)\n      .enter().append(\"path\")\n        .attr(\"class\", \"county\")\n        .attr(\"fill\", d => color(yearTempData.get(d.id)))\n        .attr(\"d\", path)\n      .append(\"title\")\n        .text(d => {\n          const county = counties.get(d.id);\n          const countyTemp = yearTempData.get(d.id);\n          return isNaN(countyTemp) ? \"Missing value\" : `${county} - ${countyTemp}F`; \n          }\n        );\n\n    svg.append(\"path\")\n      .datum(topojson.mesh(us, us.objects.states, (a, b) => a !== b))\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"d\", path);\n  }\n\n  render() { \n    const { isOn, showButtons, years, index } = this.state;\n\n    return (\n      <div>\n        <div>\n          {years[index]}\n        </div>\n        <svg ref='anchor' width={960} height={600} />\n        <ControlButtons \n          isOn={isOn}\n          showButtons={showButtons}\n          pauseMap={this.pauseMap}\n          startMap={this.startMap}\n          resetMap={this.resetMap}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Choropleth;\n","// External imports\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineSeries, Hint } from 'react-vis';\n\n// Internal imports\nimport co2Data from '../../data/LineGraph/co2-ppm-0-2014.csv';\n\nimport './LineGraph.css';\n\nclass LineGraph extends Component {\n   state = {\n    co2Data: [],\n    value: false,\n  };\n\n  componentDidMount() {\n    Promise.all([\n      d3.csv(co2Data),\n    ])\n    .then((files) => {\n      const data = files[0].map(d => {\n        return { \n            x: parseInt(d.Year), \n            y: parseInt(d['Global Mean'])\n        };\n      });\n      this.setState({\n         co2Data: data,\n      })\n    })\n  }\n\n  render() {\n    console.log(this.state.co2Data)\n    return (\n      <div>\n        <XYPlot \n          onMouseLeave={() => this.setState({value: false})}\n          width={960} \n          height={600}\n        >\n          <HorizontalGridLines />\n          <VerticalGridLines />\n          <XAxis />\n          <YAxis />\n          <LineSeries\n            className=\"third-series\"\n            curve={'curveMonotoneX'}\n            data={this.state.co2Data}\n            onNearestX={d => this.setState({value: d})}\n          />\n          {this.state.value && <Hint value={this.state.value} />}\n        </XYPlot>\n      </div>\n    );\n  }\n}\n\nexport default LineGraph;\n","// External imports\nimport React, { Component } from 'react';\n\n// Internal imports\nimport BubbleGraph from '../BubbleGraph';\nimport Choropleth from '../Choropleth';\nimport LineGraph from '../LineGraph';\n\nimport './StoryboardContainer.css';\n\nclass StoryboardContainer extends Component {\n \n  render() { \n\n    return (\n      <div>\n        <LineGraph />\n        <BubbleGraph />\n        <Choropleth />\n      </div>\n    );\n  }\n}\n\nexport default StoryboardContainer;\n","import React from 'react';\nimport StoryboardContainer from './components/StoryboardContainer'\n\nconst App = () => <StoryboardContainer />\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}