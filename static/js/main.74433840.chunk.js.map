{"version":3,"sources":["data/BubbleGraph/land-area-by-country.csv","data/BubbleGraph/population-by-country-2000-2014.csv","data/BubbleGraph/co2-by-country-2000-2014.csv","data/BubbleGraph/country-flags.csv","data/Choropleth/county-temp-1979-2011.csv","data/LineGraph/co2-ppm-0-500.csv","data/LineGraph/co2-ppm-500-1000.csv","data/LineGraph/co2-ppm-1000-1500.csv","data/LineGraph/co2-ppm-1500-2014.csv","data/LineGraph/co2-ppm-total.csv","images/hero-background.png","components/Clouds/CloudLeft/CloudLeft.js","components/Clouds/CloudMiddle/CloudMiddle.js","components/Clouds/CloudRight/CloudRight.js","components/HeroBanner/HeroBanner.js","components/BubbleGraph/SliderHandle/SliderHandle.js","components/BubbleGraph/HorizontalSlider/HorizontalSlider.js","components/BubbleGraph/BubbleGraph.js","components/Choropleth/ControlButtons/ControlButtons.js","components/Choropleth/Choropleth.js","components/LineGraph/LineGraph.js","components/StoryboardContainer/StoryboardContainer.js","App.js","AppContainer.js","index.js"],"names":["module","exports","__webpack_require__","p","CloudLeft","react_default","a","createElement","lib","className","offsetYMax","offsetYMin","tag","src","CloudMiddle","CloudRight","HeroBanner","slowerScrollRate","Clouds_CloudLeft_CloudLeft","Clouds_CloudRight_CloudRight","Clouds_CloudMiddle_CloudMiddle","Handle","Slider","SliderHandle","props","value","dragging","index","restProps","Object","objectWithoutProperties","rc_tooltip_es","prefixCls","overlay","visible","placement","key","assign","HorizontalSlider","_this","this","rc_slider_es","min","max","defaultValue","handle","onChange","v","updateBubbleGraph","Component","BubbleGraph","state","countryFlags","data","totalPopData","totalCo2Data","totalLandData","setData","year","_this$state","Array","fill","map","row","i","Country","x","parseInt","y","Area","size","setState","_this2","Promise","all","d3","landData","populationData","co2Data","then","files","_this3","diameter","each","el","push","Math","ceil","attr","parentNode","insert","append","d","concat","_this4","_this$state2","markSeriesProps","colorType","animation","sizeRange","seriesId","opacityType","onValueMouseOver","BubbleGraph_HorizontalSlider_HorizontalSlider","es","margin","top","bottom","left","onMouseLeave","width","height","yType","xType","xDomain","yDomain","noHorizontalGridLines","noVerticalGridLines","position","title","tickLabelAngle","tickSize","tickFormat","scale","tickTotal","align","horizontal","vertical","ControlButtons","isOn","showButtons","pauseMap","startMap","resetMap","onClick","fa","Choropleth","color","counties","format","totalTempData","us","yearTempData","years","yearData","clearInterval","timer","endMap","setInterval","isLastYear","Map","get","id","select","text","county","countyTemp","isNaN","renderMap","path","domain","rangeRound","svg","refs","anchor","g","selectAll","range","invertExtent","enter","call","tickValues","slice","remove","topojson","objects","features","datum","states","b","tempData","_this$state3","ref","Choropleth_ControlButtons_ControlButtons","LineGraph","co2Data500","co2Data1000","co2Data1500","co2Data2000","co2DataTotal","ellipsis","segmentIndex","lineGraphHeader","handleClick","segment","co2DataFirst","data_mean_global","co2DataSecond","co2DataThird","co2DataFourth","reactstrap_es","outline","alt","class","animate","curve","onNearestX","StoryboardContainer","components_HeroBanner_HeroBanner","components_LineGraph_LineGraph","components_BubbleGraph_BubbleGraph","components_Choropleth_Choropleth","App","components_StoryboardContainer_StoryboardContainer","AppContainer","src_App","ReactDOM","render","src_AppContainer","document","getElementById"],"mappings":"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","file":"static/js/main.74433840.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/land-area-by-country.3064315f.csv\";","module.exports = __webpack_public_path__ + \"static/media/population-by-country-2000-2014.88f1cef7.csv\";","module.exports = __webpack_public_path__ + \"static/media/co2-by-country-2000-2014.5cb5bbd6.csv\";","module.exports = __webpack_public_path__ + \"static/media/country-flags.a1597ea9.csv\";","module.exports = __webpack_public_path__ + \"static/media/county-temp-1979-2011.72529182.csv\";","module.exports = __webpack_public_path__ + \"static/media/co2-ppm-0-500.79b47e9d.csv\";","module.exports = __webpack_public_path__ + \"static/media/co2-ppm-500-1000.b57156e8.csv\";","module.exports = __webpack_public_path__ + \"static/media/co2-ppm-1000-1500.a15e202e.csv\";","module.exports = __webpack_public_path__ + \"static/media/co2-ppm-1500-2014.7186878a.csv\";","module.exports = __webpack_public_path__ + \"static/media/co2-ppm-total.e6f2fa40.csv\";","module.exports = __webpack_public_path__ + \"static/media/hero-background.f5bc93cc.png\";","import React from 'react';\nimport { Parallax } from 'react-scroll-parallax';\n\nimport './CloudLeft.css';\n\nconst CloudLeft = () => {\n  return (\n    <Parallax\n      className='image-container'\n      offsetYMax={10}\n      offsetYMin={-10}\n      tag='figure'\n    >\n      <img \n        className='inline-image-left'\n        src='https://gallery.yopriceville.com/var/resizes/Free-Clipart-Pictures/Cloud-PNG/Realistic_Cloud_PNG_Transparent_Clip_Art_Image.png?m=1507172105' \n      />\n    </Parallax>\n  );\n}\n\nexport default CloudLeft;\n","import React from 'react';\nimport { Parallax } from 'react-scroll-parallax';\n\nimport './CloudMiddle.css';\n\nconst CloudMiddle = () => {\n  return (\n    <Parallax\n      offsetYMin={-500}\n      tag='figure'\n    >\n      <img \n        className='inline-image-middle'\n        src='https://gallery.yopriceville.com/var/resizes/Free-Clipart-Pictures/Cloud-PNG/Realistic_Cloud_Transparent_PNG_Clip_Art_Image.png?m=1507172105' \n      />\n    </Parallax>\n  );\n}\n\nexport default CloudMiddle;\n","import React from 'react';\nimport { Parallax } from 'react-scroll-parallax';\n\nimport './CloudRight.css';\n\nconst CloudRight = () => {\n  return (\n    <Parallax\n      className='image-container'\n      offsetYMax={10}\n      offsetYMin={-50}\n      tag='figure'\n    >\n      <img \n        className='inline-image-right'\n        src='https://gallery.yopriceville.com/var/resizes/Free-Clipart-Pictures/Cloud-PNG/Cloud_Clip_Art_PNG_Image.png?m=1507172105' \n      />\n    </Parallax>\n  );\n}\n\nexport default CloudRight;\n","import React from 'react';\nimport { Parallax } from 'react-scroll-parallax';\n\nimport { CloudLeft, CloudMiddle, CloudRight } from '../Clouds';\n\nimport './HeroBanner.css';\n\nconst HeroBanner = () => (\n  <div className='parallax-hero-background'>\n    <div className='parallax-hero-container'>\n      <Parallax\n        className=\"parallax-hero\"\n        offsetYMax={20}\n        offsetYMin={-20}\n        slowerScrollRate={true}\n        tag=\"figure\"\n      >\n        <div className='parallax-hero-content'>\n          A Climate, <span className='text-rd'>Changing</span>\n        </div>\n      </Parallax>\n      <CloudLeft />\n      <CloudRight />\n      <CloudMiddle />\n    </div>\n </div>\n);\n\nexport default HeroBanner;","import React from 'react';\nimport Tooltip from 'rc-tooltip';\nimport Slider from 'rc-slider';\n\nconst Handle = Slider.Handle;\n\nconst SliderHandle = (props) => {\n  const { value, dragging, index, ...restProps } = props;\n  \n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nexport default SliderHandle;\n","import React, { Component } from 'react';\nimport Slider from 'rc-slider';\n\nimport SliderHandle from '../SliderHandle';\n\nimport './HorizontalSlider.css';\n\nclass HorizontalSlider extends Component {\n  \n  render() {\n    return (\n      <div className='slider-container'>\n        <Slider \n          min={2000} \n          max={2014} \n          defaultValue={2000} \n          handle={SliderHandle} \n          onChange={(v) => this.props.updateBubbleGraph(v)}\n        />\n      </div>\n    )\n  }\n}\n\nexport default HorizontalSlider;\n","// External imports\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { XYPlot, XAxis, YAxis, MarkSeries, Hint } from 'react-vis';\n\n// Internal imports\nimport HorizontalSlider from './HorizontalSlider';\nimport landData from '../../data/BubbleGraph/land-area-by-country.csv';\nimport populationData from '../../data/BubbleGraph/population-by-country-2000-2014.csv';\nimport co2Data from '../../data/BubbleGraph/co2-by-country-2000-2014.csv';\nimport countryFlags from '../../data/BubbleGraph/country-flags.csv'\n\nimport './BubbleGraph.css';\n\nclass BubbleGraph extends Component {\n  state = {\n    countryFlags: null,\n    data: null,\n    totalPopData: null,\n    totalCo2Data: null,\n    totalLandData: null,\n    value: false\n  };\n\n  componentDidMount() {\n    Promise.all([\n      d3.csv(landData),\n      d3.csv(populationData),\n      d3.csv(co2Data),\n      d3.csv(countryFlags),\n    ])\n    .then((files) => {\n      this.setState({\n        totalLandData: files[0],\n        totalPopData: files[1],\n        totalCo2Data: files[2],\n        countryFlags: files[3],\n      }, () => {\n        this.setState({\n          data: this.setData(2000),\n        })\n      })\n    })\n  }\n\n  componentDidUpdate() {\n    let diameter = [];\n\n    d3.selectAll('circle').each(function() {\n        const el = this;\n        diameter.push(Math.ceil(d3.select(this).attr('r') * 2 ));\n        d3.select(el.parentNode)\n          .insert(\"svg\")\n          .attr(\"class\", \"wrapped\")\n          .append(function() { return el; });\n    })\n        .attr('style', (d, i) => `fill: url(#country-${i}) !important` )\n\n    d3.selectAll('.wrapped')\n      .append(\"defs\")\n      .append('pattern')\n        .attr('id', (d, i) => `country-${i}`)\n        .attr('width', '100%')\n        .attr('height', '100%')\n      .append(\"image\")\n        .attr(\"xlink:href\", (d, i) => this.state.countryFlags[i]['URL'])\n        .attr('width', (d, i) => diameter[i])\n        .attr('height', (d, i) => diameter[i])\n\n  }\n\n  setData = year => {\n    const { totalCo2Data, totalLandData, totalPopData } = this.state;\n    return new Array(36).fill(0).map((row, i) => ({\n      Country: totalPopData[i]['Country'],\n      x: parseInt(totalCo2Data[i][year]),\n      y: parseInt(totalLandData[i].Area),  \n      size: parseInt(totalPopData[i][year]), \n    }));\n  }\n\n  updateBubbleGraph = year => {\n    this.setState({\n      data: this.setData(year),\n    });\n  }\n\n  render() {\n    const { data, colorType } = this.state;\n\n    const markSeriesProps = {\n      animation: true,\n      sizeRange: [10, 50],\n      seriesId: 'BubbleGraph',\n      opacityType: 'literal',\n      data,\n      onValueMouseOver: value => this.setState({value}),\n    };\n\n    return (\n      <div className='bubble-graph-container'>\n        {/* Bubble graph header */}\n        <div className='bubble-graph-background'>\n          <div className='bubble-graph-quote'>\n            \"Emissions of greenhouse gases warm the planet, altering the carbon and water cycles. A warmer ocean stores more heat, providing more fuel for hurricanes. A warmer atmosphere holds more water, bringing dangerous deluges. Rising sea levels threaten coastal zones.\"\n            <div className='bubble-graph-attribute'>- Johan Rockstrom, Stockholm University</div>\n          </div>\n          {/* Bubble Graph */}\n          <div className=\"plot-wrapper\">\n            <HorizontalSlider \n              updateBubbleGraph={this.updateBubbleGraph}\n            />\n            <XYPlot\n              margin={{ top:75, bottom:100, left:75}}\n              onMouseLeave={() => this.setState({value: false})}\n              width={960}\n              height={600}\n              yType='log'\n              xType='log'\n              xDomain={[15000, 10000000]}\n              yDomain={[15000, 30000000]}\n              noHorizontalGridLines\n              noVerticalGridLines\n            >\n              <XAxis \n                position=\"end\"\n                title=\"Greenhouse gas emissions (metric tonnes)\"\n                tickLabelAngle={-45}\n                tickSize={4}\n                tickFormat={ (value, i, scale, tickTotal) => {\n                  return `${scale.tickFormat(10, '.0s')(value)}`\n                }}\n              />\n              <YAxis \n                position=\"end\"\n                title=\"Land area (sq. km)\"\n                tickSize={4}\n                tickFormat={ (value, i, scale, tickTotal ) => {\n                  return `${scale.tickFormat(10, '.0s')(value)}`\n                }}\n              />\n              <MarkSeries {...markSeriesProps} />\n              {this.state.value \n                ? <Hint \n                  align={{horizontal: 'right', vertical: 'top'}}\n                  value={this.state.value} \n                /> \n                : null\n              }\n            </XYPlot>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BubbleGraph;\n","// External imports\nimport React from 'react';\nimport { FaPause, FaPlay, FaRedo } from 'react-icons/fa';\n\n// Internal imports\nimport './ControlButtons.css';\n\nconst ControlButtons = (props) => {\n  const { isOn, showButtons, pauseMap, startMap, resetMap } = props;\n  \n  return (\n    <div>\n      {showButtons && isOn && \n        <div \n          onClick={() => pauseMap()}\n        >\n          <FaPause className={'btn-control'}/>\n        </div>\n      }\n      {showButtons && !isOn && \n        <div \n          onClick={() => startMap()}\n        >\n          <FaPlay className={'btn-control'}/>\n        </div>\n      }\n      {!showButtons &&\n        <div \n          onClick={() => resetMap()}\n        >\n          <FaRedo className={'btn-control'}/>\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default ControlButtons;","// External imports\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as topojson from 'topojson';\n\n// Internal imports\nimport ControlButtons from './ControlButtons';\nimport tempData from '../../data/Choropleth/county-temp-1979-2011.csv';\nimport yearData from '../../data/Choropleth/county-temp-years-1979-2011.json';\n\nimport './Choropleth.css';\n\nclass Choropleth extends Component {\n  state = {\n    color: null,\n    counties: null,\n    format: d3.format(''),\n    index: 0,\n    isOn: true,\n    showButtons: true,\n    totalTempData: null,\n    us: null,\n    yearTempData: null,\n    years: yearData.years,\n  }\n\n  componentDidMount() {\n    Promise.all([\n      d3.json(\"https://unpkg.com/us-atlas@1/us/10m.json\"),\n      d3.csv(tempData),\n    ])\n    .then((files) => {\n      const totalTempData = files[1];\n      const yearTempData = new Map(files[1].map(d => [d['County Code'], d[1979]]));\n      const counties = new Map(files[1].map(d => [d['County Code'], d['County']]));\n      const color = d3.scaleQuantize().domain([36, 90]).range(d3.schemeReds[9]);\n\n      this.setState({\n        counties,\n        yearTempData,\n        totalTempData,\n        color,\n        us: files[0],\n      }, \n        () => {\n          this.renderMap();\n          this.startMap();\n        }\n      );\n    })\n  }\n\n  resetMap = () => {\n    this.setState({ \n      index: 0, \n      isOn: true,\n      showButtons: true,\n    }, () => {\n      clearInterval(this.timer);\n      this.startMap();\n    });\n  }\n\n  pauseMap = () => {\n    this.setState({ \n      isOn: false \n    }, () => {\n      clearInterval(this.timer);\n    });\n  }\n\n  endMap = () => {\n    clearInterval(this.timer);\n    this.setState({ \n      isOn: false,\n      showButtons: false,\n      index: 32,\n    });\n  }\n\n  startMap = () => {\n    this.setState({isOn: this.state.years[this.state.index] !== 2011});\n\n    this.timer = setInterval(() => {\n      const { color, counties, years, index, totalTempData } = this.state;\n      const isLastYear = years[index] === 2011;\n      if (isLastYear) this.endMap()\n      const yearTempData = new Map(totalTempData.map(d => [d['County Code'], d[years[index]]]));\n      this.setState({\n        yearTempData,\n        index: isLastYear ? 32 : index + 1,\n      }, \n        () => {\n          d3.selectAll('path.county')\n            .attr(\"fill\", d => color(yearTempData.get(d.id)))\n            .select(\"title\")\n              .text(d =>  {\n                const county = counties.get(d.id);\n                const countyTemp = yearTempData.get(d.id);\n                return isNaN(countyTemp) ? \"Missing value\" : `${county} - ${countyTemp}F`; \n              });\n        }  \n      );\n    }, 1000);\n  }\n\n  renderMap = () => {\n    const { color, counties, format, yearTempData, us } = this.state;\n\n    const path = d3.geoPath();\n\n    const x = d3.scaleLinear()\n      .domain(d3.extent(color.domain()))\n      .rangeRound([600, 860]);\n\n    const svg = d3.select(this.refs.anchor);\n\n    const g = svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,40)\");\n\n    g.selectAll(\"rect\")\n      .data(color.range().map(d => color.invertExtent(d)))\n      .enter().append(\"rect\")\n        .attr(\"height\", 8)\n        .attr(\"x\", d => x(d[0]))\n        .attr(\"width\", d => x(d[1]) - x(d[0]))\n        .attr(\"fill\", d => color(d[0]));\n\n    g.append(\"text\")\n      .attr(\"class\", \"caption\")\n      .attr(\"x\", x.range()[0])\n      .attr(\"y\", -6)\n      .attr(\"fill\", \"#000\")\n      .attr(\"text-anchor\", \"start\")\n      .attr(\"font-weight\", \"bold\")\n      .text(yearTempData.title);\n\n    g.call(d3.axisBottom(x)\n        .tickSize(13)\n        .tickFormat(format)\n        .tickValues(color.range().slice(1).map(d => color.invertExtent(d)[0]))\n      )\n      .select(\".domain\")\n        .remove();\n\n    svg.append(\"g\")\n      .attr(\"class\", \"districts\")\n      .selectAll(\"path\")\n      .data(topojson.feature(us, us.objects.counties).features)\n      .enter().append(\"path\")\n        .attr(\"class\", \"county\")\n        .attr(\"fill\", d => color(yearTempData.get(d.id)))\n        .attr(\"d\", path)\n      .append(\"title\")\n        .text(d => {\n          const county = counties.get(d.id);\n          const countyTemp = yearTempData.get(d.id);\n          return isNaN(countyTemp) ? \"Missing value\" : `${county} - ${countyTemp}F`; \n          }\n        );\n\n    svg.append(\"path\")\n      .datum(topojson.mesh(us, us.objects.states, (a, b) => a !== b))\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-linejoin\", \"round\")\n      .attr(\"d\", path);\n  }\n\n  render() { \n    const { isOn, showButtons, years, index } = this.state;\n\n    return (\n      <div>\n        <div>\n          {years[index]}\n        </div>\n        <svg ref='anchor' width={960} height={600} />\n        <ControlButtons \n          isOn={isOn}\n          showButtons={showButtons}\n          pauseMap={this.pauseMap}\n          startMap={this.startMap}\n          resetMap={this.resetMap}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Choropleth;\n","// External imports\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineSeries, Hint } from 'react-vis';\nimport { Button } from 'reactstrap';\n\n// Internal imports\nimport co2Data500 from '../../data/LineGraph/co2-ppm-0-500.csv';\nimport co2Data1000 from '../../data/LineGraph/co2-ppm-500-1000.csv';\nimport co2Data1500 from '../../data/LineGraph/co2-ppm-1000-1500.csv';\nimport co2Data2000 from '../../data/LineGraph/co2-ppm-1500-2014.csv';\nimport co2DataTotal from '../../data/LineGraph/co2-ppm-total.csv';\n\nimport './LineGraph.css';\n\nclass LineGraph extends Component {\n   state = {\n    co2Data500: [],\n    co2Data1000: [],\n    co2Data1500: [],\n    co2Data2000: [],\n    co2DataTotal: [],\n    data: [],\n    ellipsis: \" ...\",\n    segmentIndex: 0,\n    lineGraphHeader: \" global levels of carbon dioxide in the atmosphere remained steady\",\n    value: false,\n  };\n\n  componentDidMount() {\n    Promise.all([\n      d3.csv(co2Data500),\n      d3.csv(co2Data1000),\n      d3.csv(co2Data1500),\n      d3.csv(co2Data2000),\n      d3.csv(co2DataTotal),\n    ])\n    .then((files) => {\n      const co2DataFirst = files[0].map(d => ({ x: parseInt(d.year), y: parseInt(d.data_mean_global) }));\n      const co2DataSecond = files[1].map(d => ({ x: parseInt(d.year), y: parseInt(d.data_mean_global) }));\n      const co2DataThird = files[2].map(d => ({ x: parseInt(d.year), y: parseInt(d.data_mean_global) }));\n      const co2DataFourth = files[3].map(d => ({ x: parseInt(d.year), y: parseInt(d.data_mean_global) }));\n      const co2DataTotal = files[4].map(d => ({ x: parseInt(d.year), y: parseInt(d.data_mean_global) }));\n      this.setState({\n        co2Data500: co2DataFirst,\n        co2Data1000: co2DataSecond,\n        co2Data1500: co2DataThird,\n        co2Data2000: co2DataFourth,\n        co2DataTotal: co2DataTotal,\n        data: co2DataFirst,\n      })\n    })\n  }\n\n  handleClick = () => {\n    const { segmentIndex } = this.state;\n    const co2Segments = ['co2Data1000', 'co2Data1500', 'co2Data2000', 'co2DataTotal'];\n    const textSegments = [\n      '. Dating back four hundred thousand years and into the common era, CO2 levels oscillated between 180 and 240 ppm',\n      '. This pattern continued through the previous millennium up until the industrial revolution',\n      '. At that point, the atmospheric CO2 concentration went parabolic, reaching levels not seen since the Earth\\'s formation.'\n    ]\n\n    const segment = co2Segments[segmentIndex];\n\n    if (segmentIndex <= 2) {\n      this.setState({ \n        data: this.state.data.concat(this.state[segment]),\n        lineGraphHeader: this.state.lineGraphHeader.concat(textSegments[segmentIndex]),\n        segmentIndex: this.state.segmentIndex + 1,\n      });\n    }\n  }\n\n  render() {\n    const { segmentIndex, lineGraphHeader, ellipsis } = this.state;\n\n    return (\n      <div className='line-graph-backgound'>\n        <div className='line-graph-container'>\n          {/* Graph Header */}\n          <h1 className='line-graph-header'>\n            <span className='line-graph-lead'>For centuries,</span>\n            {lineGraphHeader}{segmentIndex === 3 ? null : ellipsis}\n          </h1>\n          <div className='line-graph-btn-container'>\n            <Button \n              outline \n              color=\"danger\" \n              className={`line-graph-btn ${segmentIndex === 3 ? 'hide-btn' : ''}`} \n              onClick={() => this.handleClick()} \n            >\n              <span className='icon-holder'>\n                <img src=\"https://image.flaticon.com/icons/svg/56/56380.svg\" alt=\"One finger tap gesture of outlined hand symbol\" class=\"replaced-svg\" /> \n              </span>\n              Click to Continue\n            </Button>\n          </div>\n          {/* Line Graph */}\n          <XYPlot \n            animate={true}\n            className={`line-graph-plot ${segmentIndex === 3 ? 'no-btn' : ''}`}\n            onMouseLeave={() => this.setState({value: false})}\n            width={700} \n            height={400}\n            yDomain={ segmentIndex === 3 ? null : [250, 300] }\n          >\n            <HorizontalGridLines />\n            <VerticalGridLines />\n            <XAxis \n              position=\"end\"\n              title=\"Year\"\n            />\n            <YAxis \n              position=\"end\"\n              title=\"Carbon dioxide level (ppm)\"\n            />\n            <LineSeries\n              className='line-graph-path'\n              curve={'curveMonotoneX'}\n              data={this.state.data}\n              onNearestX={d => this.setState({value: d})}\n            />\n            {this.state.value && <Hint value={this.state.value} />}\n          </XYPlot>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LineGraph;\n","// External imports\nimport React, { Component } from 'react';\n\n// Internal imports\nimport HeroBanner from '../HeroBanner';\nimport BubbleGraph from '../BubbleGraph';\nimport Choropleth from '../Choropleth';\nimport LineGraph from '../LineGraph';\n\nimport './StoryboardContainer.css';\nimport map from '../../images/hero-background.png';\n\nclass StoryboardContainer extends Component {\n \n  render() { \n\n    return (\n      <div>\n        <HeroBanner />\n        <LineGraph />\n        <BubbleGraph />\n        <Choropleth />\n      </div>\n    );\n  }\n}\n\nexport default StoryboardContainer;\n","import React from 'react';\nimport StoryboardContainer from './components/StoryboardContainer'\n\nconst App = () => <StoryboardContainer />\n\nexport default App;\n","import React, { Component } from 'react';\nimport { ParallaxProvider } from 'react-scroll-parallax';\n\nimport App from './App';\n\nclass AppContainer extends Component {\n  render() {\n    return (\n      <ParallaxProvider>\n        <App />\n      </ParallaxProvider>\n    );\n  }\n}\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './AppContainer';\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n"],"sourceRoot":""}